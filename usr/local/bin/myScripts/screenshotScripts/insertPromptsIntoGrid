#!/usr/bin/bash

if [ $# -eq 0 ]; then
  echo "No arguments provided. You should provide the path for the day-folder so I can create a grid and insert the prompts in it."
  echo "You can enter the day-folder then run /usr/local/bin/myScripts/screenshotScripts/insertPromptsIntoGrid \$(pwd)"
  exit 1
else
  echo "Will create grid and insert the prompts from $1"
fi

gridName=$(basename $1)
MONTH_NAME=$(dirname $1)
PROMPTS_PATH=$1/whatDidYouDo.txt
command="convert $MONTH_NAME/$gridName.jpg -pointsize 30 "
lineNum=350

# removing double quotes " from the .txt file
sed -i "s/[\"]/''/g" $PROMPTS_PATH
sed -i "s/[&]/e/g" $PROMPTS_PATH
sed -i "s/[\\]/\//g" $PROMPTS_PATH
sed -i "s/</←/g" $PROMPTS_PATH

# IFS: internal field separator, makes the for loop iterate over every \n instead of every whitespace
IFS=$'\n'

for line in $(cat $PROMPTS_PATH)
do
  folded_line=$(echo $line | fold -w 84)
  formated_line=""
  for sub_line in $folded_line
  do
    formated_line="$formated_line$sub_line\n"
  done
  command="${command}
-fill black -annotate +5+$lineNum \"$formated_line\" 
-fill black -annotate +7+$lineNum \"$formated_line\" 
-fill black -annotate +9+$lineNum \"$formated_line\" 
-fill black -annotate +5+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +7+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +9+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +5+$(($lineNum + 4)) \"$formated_line\" 
-fill black -annotate +7+$(($lineNum + 4)) \"$formated_line\" 
-fill black -annotate +9+$(($lineNum + 4)) \"$formated_line\" 
-fill orange -annotate +7+$(($lineNum + 2)) \"$formated_line\" "
  lineNum=$(($lineNum + 680))
done


command="${command}-pointsize 11 -background black -fill orange pango:\"<b>$"
command="${command}(cat $PROMPTS_PATH | fold -w 140)</b>\" +swap -gravity Center -append $MONTH_NAME/$gridName.jpg"

# uncomment these lines for debugging:
#echo -e "\n\n"
#echo -e "$command"
eval $command
