#!/usr/bin/bash

# $1 is the first argument, which should be an existing path
cd $1

gridName=$(echo $1 | grep -o  '[^\/]\+$')
command="convert $gridName.jpg -pointsize 30 "
lineNum=350

# removing double quotes " from the .txt file
sed -i "s/[\"]/''/g" whatDidYouDo.txt
sed -i "s/[&]/e/g" whatDidYouDo.txt
sed -i "s/[\\]/\//g" whatDidYouDo.txt
sed -i "s/</←/g" whatDidYouDo.txt

# IFS: internal field separator, makes the for loop iterate over every \n instead of every whitespace
IFS=$'\n'

for line in $(cat whatDidYouDo.txt)
do
  folded_line=$(echo $line | fold -w 84)
  formated_line=""
  for sub_line in $folded_line
  do
    formated_line="$formated_line$sub_line\n"
  done
  command="${command}
-fill black -annotate +5+$lineNum \"$formated_line\" 
-fill black -annotate +7+$lineNum \"$formated_line\" 
-fill black -annotate +9+$lineNum \"$formated_line\" 
-fill black -annotate +5+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +7+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +9+$(($lineNum + 2)) \"$formated_line\" 
-fill black -annotate +5+$(($lineNum + 4)) \"$formated_line\" 
-fill black -annotate +7+$(($lineNum + 4)) \"$formated_line\" 
-fill black -annotate +9+$(($lineNum + 4)) \"$formated_line\" 
-fill orange -annotate +7+$(($lineNum + 2)) \"$formated_line\" "
  lineNum=$(($lineNum + 680))
done


command="${command}-pointsize 11 -background black -fill orange pango:\"<b>$"
command="${command}(cat whatDidYouDo.txt | fold -w 140)</b>\" +swap -gravity Center -append $gridName.jpg"

# uncomment these lines for debugging:
#echo -e "\n\n"
#echo -e "$command"
eval $command
